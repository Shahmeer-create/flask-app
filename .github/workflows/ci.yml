name: CI with SAST, DAST, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  issues: write   # Needed so ZAP can create issues/comments

jobs:
  build-and-sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python -m unittest || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dast-scan:
    runs-on: ubuntu-latest
    needs: build-and-sast

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Start your Flask app in Docker
      - name: Run Flask app
        run: |
          docker build -t flask-app .
          docker run -d -p 5000:5000 --name flask-app flask-app
          sleep 15

      # OWASP ZAP Baseline Scan using official Action
      - name: ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: "http://localhost:5000"
          cmd_options: "-a"
          allow_issue_writing: false

      # Upload the generated ZAP report
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap1
          path: report_html.html
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: dast-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if [ ! -d "flask-app" ]; then
              git clone https://github.com/shahmeer-create/flask-app.git flask-app
            fi
            cd flask-app
            git pull origin main
            sudo git config --global --add safe.directory /home/ubuntu/flask-app
            sudo docker build -t flask-app .
            sudo docker stop flask-app || true
            sudo docker rm flask-app || true
            sudo docker run -d -p 5000:5000 --name flask-app flask-app

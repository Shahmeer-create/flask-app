name: CI with SAST and DAST and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  issues: write   # Needed so ZAP can create issues/comments

jobs:
  build-and-sast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python -m unittest || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  dast-scan:
    runs-on: ubuntu-latest
    needs: build-and-sast

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Flask app
        run: |
          docker build -t flask-app .
          docker run -d -p 5000:5000 --name flask-app flask-app
          until curl -s http://localhost:5000; do sleep 1; done

      - name: OWASP ZAP Baseline Scan
        run: |
          # Create reports and working directory
          mkdir -p zap-reports zap-wrk
          
          # Run ZAP scan with mounted working directory
          docker run --network=host \
            -v $(pwd)/zap-wrk:/zap/wrk \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py -t http://localhost:5000 -a \
            -J /zap/wrk/report_json.json \
            -w /zap/wrk/report_md.md \
            -r /zap/wrk/report_html.html
          
          # Copy reports from local directory
          mv zap-wrk/report_json.json ./report_json.json 2>/dev/null || echo "[]" > ./report_json.json
          mv zap-wrk/report_md.md ./report_md.md 2>/dev/null || echo "# ZAP Report" > ./report_md.md
          mv zap-wrk/report_html.html ./report_html.html 2>/dev/null || echo "<html><body>ZAP Report</body></html>" > ./report_html.html

      - name: Upload ZAP Reports
        uses: actions/upload-artifact@v4
        with:
          name: zap-reports
          path: |
            report_html.html
            report_md.md
            report_json.json

  deploy:
    runs-on: ubuntu-latest
    needs: dast-scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            if [ ! -d "flask-app" ]; then
              git clone https://github.com/shahmeer-create/flask-app.git flask-app
            fi
            cd flask-app
            git pull origin main
            sudo git config --global --add safe.directory /home/ubuntu/flask-app
            sudo docker build -t flask-app .
            sudo docker stop flask-app || true
            sudo docker rm flask-app || true
            sudo docker run -d -p 5000:5000 --name flask-app flask-app

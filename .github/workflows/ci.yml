dast-scan:
  runs-on: ubuntu-latest
  needs: build-and-sast

  steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Run Flask app
      run: |
        docker build -t flask-app .
        docker run -d -p 5000:5000 --name flask-app flask-app
        until curl -s http://localhost:5000; do sleep 1; done

    - name: OWASP ZAP Baseline Scan
      run: |
        # Create reports and working directory
        mkdir -p zap-reports zap-wrk
        
        # Run ZAP scan with mounted working directory
        docker run --network=host \
          -v $(pwd)/zap-wrk:/zap/wrk \
          ghcr.io/zaproxy/zaproxy:stable \
          zap-baseline.py -t http://localhost:5000 -a \
          -J /zap/wrk/report_json.json \
          -w /zap/wrk/report_md.md \
          -r /zap/wrk/report_html.html
        
        # Copy reports from local directory
        mv zap-wrk/report_json.json ./report_json.json 2>/dev/null || echo "[]" > ./report_json.json
        mv zap-wrk/report_md.md ./report_md.md 2>/dev/null || echo "# ZAP Report" > ./report_md.md
        mv zap-wrk/report_html.html ./report_html.html 2>/dev/null || echo "<html><body>ZAP Report</body></html>" > ./report_html.html

    - name: Upload ZAP Reports
      uses: actions/upload-artifact@v4
      with:
        name: zap-reports
        path: |
          report_html.html
          report_md.md
          report_json.json
